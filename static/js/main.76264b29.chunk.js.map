{"version":3,"sources":["logo.svg","NoteItem.js","NavigationBar.js","components/Modal.js","CreateNote.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NoteItem","props","Card","Body","onClick","renderSingleItem","id","Title","title","Text","body","Footer","ButtonToolbar","aria-label","ButtonGroup","className","aria-hidden","handleDelete","NavigationBar","Navbar","bg","variant","expand","Brand","href","alt","src","logo","width","height","Toggle","aria-controls","Collapse","Form","inline","InputGroup","Prepend","FormControl","placeholder","Nav","Link","handleCreate","MyVerticallyCenteredModal","Modal","this","size","aria-labelledby","centered","onSubmit","e","handleSubmit","Header","type","value","name","onChange","handleChange","Button","Component","CreateNote","Container","style","display","show","Row","Col","md","span","offset","Group","controlId","note","axios","defaults","xsrfHeaderName","xsrfCookieName","App","activeNote","console","log","setState","noteList","state","map","showModal","renderItems","key","updated_at","bind","refreshNoteList","get","then","response","data","catch","err","target","preventDefault","savedNote","updatedNote","put","post","showCreate","delete","CardColumns","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76264b29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Card, ButtonGroup, ButtonToolbar } from \"react-bootstrap\";\n\nconst NoteItem = props => {\n  return (\n    <Card>\n      <Card.Body onClick={() => props.renderSingleItem(props.id)}>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>{props.body}</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <ButtonToolbar aria-label=\"Toolbar with button groups\">\n          <ButtonGroup className=\"mr-auto\" aria-label=\"First group\">\n            <span className=\"action-button rounded-circle\"><i className=\"fa fa-thumb-tack\" aria-hidden=\"true\"></i></span>\n            <span className=\"action-button rounded-circle\"><i className=\"fa fa-eye-slash\" aria-hidden=\"true\"></i></span>\n            \n          </ButtonGroup>\n\n          \n\n          <ButtonGroup className=\"ml-auto\" aria-label=\"Third group\">\n            <span className=\"action-button rounded-circle\" onClick={() => props.handleDelete(props.id)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default NoteItem;\n","import React from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  InputGroup\n} from \"react-bootstrap\";\nimport logo from \"./logo.svg\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nfunction NavigationBar(props) {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src={logo}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        Stue's Keep\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Form inline className=\"ml-5 pl-2\">\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl placeholder=\"Search\" className=\"mr-sm-2\" />\n          </InputGroup>\n        </Form>\n\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"#home\" onClick={props.handleCreate}>\n            <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n          </Nav.Link>\n          <Nav.Link href=\"#link\">\n            <i className=\"fa fa-cog\"></i>\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavigationBar;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form, } from \"react-bootstrap\";\n\nclass MyVerticallyCenteredModal extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Form onSubmit={e => this.props.handleSubmit(e)}>\n          <Modal.Header>\n            <input type=\"text\" value={this.props.title} name=\"title\" onChange={(e) => this.props.handleChange(e)} />\n          </Modal.Header>\n          <Modal.Body>\n            <textarea value={this.props.body} name=\"body\" onChange={(e) => this.props.handleChange(e)} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"submit\">Close</Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default MyVerticallyCenteredModal;\n\n// function App() {\n//   const [modalShow, setModalShow] = React.useState(false);\n\n//   return (\n//     <ButtonToolbar>\n//       <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n//         Launch vertically centered modal\n//       </Button>\n\n//       <MyVerticallyCenteredModal\n//         show={modalShow}\n//         onHide={() => setModalShow(false)}\n//       />\n//     </ButtonToolbar>\n//   );\n// }\n\n// render(<App />);\n","import React, { Component } from \"react\";\n\nimport { Form, Card, Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass CreateNote extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <Container className=\"mb-4\" style={{display: this.props.show? null : \"none\"}}>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }}>\n            <Card>\n              <Card.Body>\n                <Form onSubmit={e => this.props.handleSubmit(e)}>\n                  <Form.Group controlId=\"formGroupTitle\">\n                    <input type=\"text\" onChange={e => this.props.handleChange(e)} placeholder=\"Title\" name=\"title\" value={this.props.note.title} />\n                  </Form.Group>\n                  <Form.Group controlId=\"formGroupBody\">\n                    <textarea value={this.props.note.body} onChange={e => this.props.handleChange(e)} size=\"sm\" name=\"body\" placeholder=\"Take a note...\" />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                    close\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CreateNote;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NoteItem from \"./NoteItem\";\nimport NavigationBar from \"./NavigationBar\";\nimport MyVerticallyCenteredModal from \"./components/Modal\";\nimport { Container, Row, CardColumns } from \"react-bootstrap\";\nimport CreateNote from \"./CreateNote\";\nimport axios from \"axios\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n// axios.post(\"/api/login/\", {username: \"stue\", password: \"stue\"})\n//   .then(response => console.log(\"Login\", response))\n//   .catch(err => console.log(\"LOgin failed\", err.response))\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteList: [],\n      showModal: false,\n      note: {\n        title: \"\",\n        body: \"\"\n      }\n    };\n\n    this.renderSingleItem = this.renderSingleItem.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.refreshNoteList = this.refreshNoteList.bind(this);\n  }\n\n  componentDidMount() {\n    // xhr = new XMLHttpRequest();\n    // xhr.open(\"GET\", \"http://127.0.0.1:8000/api/notes/\", true);\n    // xhr.send();\n\n    // xhr.addEventListener(\"readystatechange\", this.refreshNoteList, false);\n\n    this.refreshNoteList();\n  }\n\n  refreshNoteList() {\n    // if (xhr.readyState === 4 && xhr.status === 200) {\n    //   let response = JSON.parse(xhr.responseText);\n\n    //   console.log(response);\n\n    //   this.setState({\n    //     noteList: response\n    //   })\n    // }\n\n    axios\n      .get(\"http://2d616b39.ngrok.io/api/notes/\")\n      .then(response => this.setState({ noteList: response.data }))\n      .catch(err => console.log(\"error\", err.response))\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      note: {\n        ...this.state.note,\n        [name]: value\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const savedNote = {\n      title: this.state.note.title,\n      body: this.state.note.body\n    };\n\n    const updatedNote = this.state.note;\n\n    if (this.state.showModal) {\n      axios\n        .put(`http://2d616b39.ngrok.io/api/notes/${updatedNote.id}/`, updatedNote)\n        .then(response => this.refreshNoteList())\n        .then(response =>\n          this.setState({ note: { title: \"\", body: \"\" }, showModal: false })\n        );\n    } else {\n      axios\n        .post(\"http://2d616b39.ngrok.io/api/notes/\", savedNote)\n        .then(response => this.refreshNoteList())\n        .then(response =>\n          this.setState({ note: { title: \"\", body: \"\" }, showCreate: false })\n        );\n    }\n  }\n\n  handleDelete(id) {\n    axios.delete(`http://2d616b39.ngrok.io/api/notes/${id}`).then(response => this.refreshNoteList());\n  }\n\n  renderSingleItem = id => {\n    let activeNote = {};\n    console.log(id);\n    this.setState({\n      noteList: this.state.noteList.map(note => {\n        if (note.id === id) {\n          activeNote = { ...note };\n\n          return activeNote;\n        }\n\n        return note;\n      })\n    });\n\n    console.log(activeNote);\n\n    this.setState({\n      note: activeNote,\n      showModal: true\n    });\n  };\n\n  renderItems = () => {\n    const notes = this.state.noteList.map(note => (\n      <NoteItem\n        id={note.id}\n        key={note.id}\n        title={note.title}\n        body={note.body}\n        updated_at={note.updated_at}\n        renderSingleItem={this.renderSingleItem}\n        handleDelete={this.handleDelete}\n      />\n    ));\n\n    return notes;\n  };\n\n  render() {\n    return (\n      <>\n        <NavigationBar\n          handleCreate={() => this.setState({ showCreate: true })}\n        />\n\n        <Container className=\"mt-5\">\n          <Row>\n            <CreateNote\n              show={this.state.showCreate}\n              note={this.state.note}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n            />\n\n            <CardColumns>{this.renderItems()}</CardColumns>\n\n            <MyVerticallyCenteredModal\n              show={this.state.showModal}\n              // onHide={this.handleSubmit}\n              title={this.state.note.title}\n              body={this.state.note.body}\n              updated_at={this.state.note.updated_at}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n            />\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}